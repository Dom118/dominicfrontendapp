@page "/products"
@using ProductFE.Models;
@using FeProduct.Services;
@inject ProductService ProductService;
@inject NavigationManager Navigation;

<PageTitle>Products</PageTitle>
<div class="container py-5">
    <h3 class="mb-4">Our Products</h3>
    @if (ProductList2 == null || !ProductList2.Any())
    {
    <p class="text-muted">No products available.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var product in ProductList2)
                {
                    <div class="col">
                        <div class="card h-100 shadow-sm">
                       @if (!string.IsNullOrEmpty(product.ImageUrl))
                       {
                            <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="object-fit: cover; height: 200px;" />
                       }
                       else
                       {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <span class="text-muted">No Image</span>
                            </div>
                       }
                        <div class="card-body">
                            <h5 class="card-title">
                                <a href="/product-details/@product.Id" class="text-decoration-none text-dark">@product.Name</a>
                            </h5>
                            <p class="card-text">
                                <strong>Price:</strong> $@product.Price<br />
                                <strong>Stock:</strong> @product.StockQuantity
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-0 d-flex justify-content-between">
                            <button class="btn btn-warning" @onclick="() => NavigateToUpdate(product.Id)">Edit</button>
                            <button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Delete</button>
                        </div>
                    </div>
                </div>
            }
    </div>
    }
</div>

@code {
    private List<Product> ProductList2 = new();

        protected override async Task OnInitializedAsync()
        {
            ProductList2 = await ProductService.GetProductsAsync();
        }
    
    private void NavigateToUpdate(int id)
    {
        Navigation.NavigateTo($"/update-product/{id}");
    }
    
    private async Task DeleteProduct(int id)
    {
        await ProductService.DeleteProductAsync(id);
        ProductList2 = await ProductService.GetProductsAsync();
    }
}